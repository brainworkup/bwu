---
title-meta: executive
execute:
  warning: false
  echo: false
  message: false
format:
  typst:
    keep-typ: true
  pdf:
    keep-md: true
    keep-tex: true
---

<!-- ### Attention/Executive -->

```{r}
#| label: data-executive
library(readr)
library(dplyr)
library(bwu)

# which csv file to use
pheno <- "executive"

if (pheno == "adhd" || pheno == "emotion") {
  csv <- "neurobehav.csv"
} else {
  csv <- "neurocog.csv"
}

# read data
file_path <- file.path(csv)
data <- readr::read_csv(file_path)
```

```{r}
#| label: filter-executive

# FILTER DATA
# filter by broad domain
domain <- "Attention/Executive"
data <- dplyr::filter(data, domain == !!domain)

# filter by scale
filter_file <- c(
  ## NAB
  "NAB Attention Index",
  "Attention Domain",
  "Orientation",
  "Digits Forward",
  "Digits Forward Longest Span",
  "Digits Backward",
  "Digits Backward Longest Span",
  "Dots",
  "Numbers & Letters Part A Speed",
  "Numbers & Letters Part A Errors",
  "Numbers & Letters Part A Efficiency",
  "Numbers & Letters Part B Efficiency",
  "Numbers & Letters Part C Efficiency",
  "Numbers & Letters Part D Efficiency",
  "Numbers & Letters Part D Disruption",
  "Driving Scenes",
  "NAB Executive Functions Index",
  "Executive Functions Domain",
  "Mazes",
  "Categories",
  "Word Generation",
  "Word Generation Perseverations",
  "Judgment",
  ## RBANS
  "Attention Index",
  ## CONCEPT FORMATION
  # "Comprehension",
  # "Similarities",
  # "Matrix Reasoning",
  # CET
  "Total Deviation Score",
  ## WAIS/WISC/WMS
  "Working Memory (WMI)",
  "Auditory Working Memory (AWMI)",
  "Arithmetic",
  "Digit Span",
  "Digit Span Forward",
  "Digit Span Backward",
  "Digit Span Sequencing",
  "Longest Digit Span Forward",
  "Longest Digit Span Backward",
  "Longest Digit Span Sequence",
  "Letter-Number Sequencing",
  "Longest Letter-Number Sequence",
  "Symbol Span",
  "Spatial Span",
  "Picture Span",
  ## WPPSI-IV
  "Picture Memory",
  "Zoo Locations",
  # PROCESSING SPEED
  "Processing Speed (PSI)",
  "Coding",
  "Cancellation",
  # "Cancellation Random",
  # "Cancellation Structured",
  "Symbol Search",
  "Bug Search",
  "Animal Coding",
  ## TMT
  "TMT, Part A",
  "TMT, Part B",
  "Trails A",
  "Trails B",
  ## Clock Drawing Test
  "Clock Drawing",
  ## DKEFS
  "D-KEFS Color Naming",
  "D-KEFS Word Reading",
  "D-KEFS Inhibition",
  "D-KEFS Switching",
  "D-KEFS Inhibition Total Errors",
  "D-KEFS Switching Total Errors",
  ## CVLT
  "CVLT-3 Total Intrusions",
  "CVLT-3 Total Repetitions",
  ## RCFT
  "ROCFT Copy",
  ## NIH EXAMINER
  "Unstructured Task",
  "Letter Fluency",
  "Category Fluency",
  ## WMS-4 Working Memory
  "Spatial Addition",
  "Picture Span"
)
data <- dplyr::filter(data, scale %in% filter_file)

```

```{r}
#| label: text-executive
#| cache: true
library(glue)
library(purrr)
library(dplyr)

data_text <-
  data |>
  dplyr::arrange(dplyr::desc(percentile)) |>
  dplyr::distinct(.keep_all = FALSE)

data_text |>
  glue::glue_data() |>
  purrr::modify(purrr::as_mapper(~ paste0(.x))) |>
  cat(data_text$result,
    file = "_executive_text_raw.qmd",
    fill = TRUE,
    append = TRUE
  )
```

```{r}
#| label: qtbl-executive
#| tbl-cap: "Attentional and Executive Functions"
#| out-width: 80%
# GT table
xfun::pkg_attach2(c("gt", "dplyr", "glue", "webshot2", "gtExtras", "bwu"))

# more filtering for tables
data <- dplyr::filter(data, test_name != "CVLT-3 Brief")
data <- dplyr::filter(data, scale != "Orientation")
data <- dplyr::filter(data, scale %in% c(
  "NAB Attention Index",
  "Digits Forward",
  "Digits Forward Longest Span",
  "Digits Backward",
  "Digits Backward Longest Span",
  "Dots",
  "Numbers & Letters Part A Efficiency",
  "Numbers & Letters Part B Efficiency",
  "Numbers & Letters Part C Efficiency",
  "Numbers & Letters Part D Efficiency",
  "Driving Scenes",
  "NAB Executive Functions Index",
  "Mazes",
  "Categories",
  "Word Generation",
  "Word Generation Perseverations",
  "Judgment",
  "Working Memory (WMI)",
  "Arithmetic",
  "Digit Span",
  "Longest Digit Span Forward",
  "Longest Digit Span Backward",
  "Longest Digit Span Sequence",
  "Letter-Number Sequencing",
  "Symbol Span",
  "Spatial Span",
  "Picture Span",
  "Processing Speed (PSI)",
  "Coding",
  "Cancellation",
  "Symbol Search",
  "TMT, Part A",
  "TMT, Part B",
  "Unstructured Task",
  "Attention Index"
))
data <- dplyr::arrange(data, test_name)

# source note
source_note <- gt::md("*Note:* T-scores have a mean of 50 and a standard deviation of 10. Scaled scores have a mean of 10 and a standard deviation of 3.")

# run fc
table_executive <- bwu::tbl_gt(
  data,
  table_name = "table_executive",
  source_note = source_note
)
table_executive

gt::gtsave(table_executive, glue("table_executive", ".png"), expand = 10)
gt::gtsave(table_executive, glue("table_executive", ".pdf"), expand = 10)

```

```{=typst}
<qtbl-executive>
#figure([#image("table_executive.png", width: 60%)],
  caption: [
    Attention/Executive Scores
  ],
  kind: "qtbl",
  supplement: [Table],
)
```

```{r}
#| label: fig-executive
#| eval: true
#| column: page
#| out-width: 60%
#| fig-cap: "Attentional and executive functions underlie most, if not all, domains of cognitive performance. These are behaviors and skills that allow individuals to successfully carry-out instrumental and social activities, academic work, engage with others effectively, problem solve, and successfully interact with the environment to get needs met."
xfun::pkg_attach(c(
  "gt", "tidyverse", "glue", "webshot2", "ggplot2", "ggthemes",
  "scales", "bwu"
))

# data for dotplot
data <- dplyr::filter(data, !is.na(percentile))

fig_executive <- bwu::dotplot(
  data = data,
  x = data$z_mean_sub,
  y = data$subdomain,
  fill = x
)
fig_executive

ggplot2::ggsave("fig_executive.png")
ggplot2::ggsave("fig_executive.pdf")

```

```{r}
#| label: _tbl-md-executive
#| eval: false
#| tbl-cap: "Attentional and Executive Functions"
# markdown table; change labe if want to use
markdown_table_typst <- function(data) {
  data.frame(
    data
  ) |>
    kableExtra::kbl(
      format = "markdown",
      table.envir = "figure",
      longtable = FALSE,
      booktabs = TRUE,
      linesep = "",
      align = c("lccc"),
      caption = "Attention/Executive",
      col.names = c("**Scale**", "**Score**", "**â€° Rank**", "**Range**")
    )
}

tbl_md <- markdown_table_typst(data[, c(2, 4, 5, 6)])
tbl_md
```
